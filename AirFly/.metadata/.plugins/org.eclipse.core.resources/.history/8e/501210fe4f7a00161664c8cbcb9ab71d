
package edu.msg.flightmanager.web.filters;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import edu.msg.flightmanager.web.util.Constants;

@WebFilter(filterName = "AuthenticationFilter", urlPatterns = { "*.xhtml" })
public class AuthenticationFilter implements Filter {

	@Override
	public void init(FilterConfig filterConfig) throws ServletException {

	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
			throws IOException, ServletException {
		try {

			HttpServletRequest httpRequest = (HttpServletRequest) request;
			HttpServletResponse httpResponse = (HttpServletResponse) response;
			HttpSession httpSession = httpRequest.getSession(false);

			String requestUrl = httpRequest.getRequestURI();

			boolean isLoginPage = requestUrl.indexOf("/login.xhtml") >= 0;
			boolean isUserLoggedIn = httpSession != null && httpSession.getAttribute(Constants.USER) != null;
			boolean isResource = requestUrl.contains("javax.faces.resource");
			boolean isForgotPasswordPage = requestUrl.indexOf("/forgotPassword.xhtml") >= 0;
			boolean isChangePasswordPage = requestUrl.indexOf("/changePassword.xhtml") >= 0;
			boolean isErrorPage = requestUrl.indexOf("/error.xhtml") >= 0;

			if (isLoginPage || isUserLoggedIn || isResource || isForgotPasswordPage || isChangePasswordPage
					|| isErrorPage)
				chain.doFilter(request, response);
			else {
				httpResponse.sendRedirect(httpRequest.getContextPath() + "/home.xhtml");
			}

		} catch (Throwable t) {
			t.printStackTrace();
		}
	}

	@Override
	public void destroy() {

	}
}
