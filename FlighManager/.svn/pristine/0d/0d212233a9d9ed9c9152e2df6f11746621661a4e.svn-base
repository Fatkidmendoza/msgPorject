package edu.msg.flightmanager.beans;

import java.io.Serializable;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;

import edu.msg.flightmanager.backend.dto.UserDto;
import edu.msg.flightmanager.backend.service.AuthenticationService;
import edu.msg.flightmanager.backend.service.ServiceException;

@ManagedBean
@SessionScoped
public class LoginBean implements Serializable {

	private static final long serialVersionUID = 6104922328402104850L;

	private UserDto userDto = new UserDto();

	@EJB
	private AuthenticationService authenticationService;

	public String processLogin() {
		try {
			userDto = authenticationService.login(userDto.getUserName(), userDto.getPassword());
			handleLoginSuccess();

			HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext()
					.getSession(false);
			session.setAttribute("user", userDto);
			return "loginSuccess";
		} catch (ServiceException e) {
			handleLoginFailed();
			return "loginFailed";
		}

	}

	public UserDto getUserInSession() {
		HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false);
		return (UserDto) session.getAttribute("user");

	}

	public void handleLoginFailed() {
		FacesContext.getCurrentInstance().addMessage(null,
				new FacesMessage(FacesMessage.SEVERITY_ERROR, "Wrong username or password", "Login failed"));

	}

	public void handleLoginSuccess() {
		FacesContext.getCurrentInstance().addMessage(null,
				new FacesMessage(FacesMessage.SEVERITY_INFO, "Login sucess", "Ok"));
		HttpSession session = getSession();
		session.setAttribute("username", userDto);

	}

	public String logout() {
		HttpSession session = getSession();
		session.invalidate();
		return "login";
	}

	private HttpSession getSession() {
		HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false);
		return session;
	}

	public UserDto getUserDto() {
		return userDto;
	}

	public void setUserDto(UserDto userDto) {
		this.userDto = userDto;
	}

}
