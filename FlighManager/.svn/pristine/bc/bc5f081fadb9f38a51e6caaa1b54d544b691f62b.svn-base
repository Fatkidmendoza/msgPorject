package edu.msg.flightmanager.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.component.UIInput;
import javax.faces.context.FacesContext;
import javax.faces.validator.FacesValidator;
import javax.faces.validator.Validator;
import javax.faces.validator.ValidatorException;

import edu.msg.flightmanager.backend.service.UserService;

@FacesValidator("userPasswordValidator")
public class PasswordValidator implements Validator {

	@EJB
	private UserService userService;

	@Override
	public void validate(FacesContext facesContext, UIComponent uiComponent, Object value) throws ValidatorException {
		String password = value.toString();
		UIInput uiInputNewPassword = (UIInput) uiComponent.getAttributes().get("newPassword");

		if (password.length() < 4) {
			FacesMessage message = new FacesMessage("Password too short!");
			throw new ValidatorException(message);
		} else if (matchesPattern(password)) {
			FacesMessage message = new FacesMessage("Password(s) contains special characters");
			throw new ValidatorException(message);
		}

	}

	private boolean matchesPattern(String password) {
		Pattern pattern = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
		Matcher matcherInput = pattern.matcher(password);
		return matcherInput.find();
	}
}
